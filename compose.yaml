# https://docs.docker.com/reference/compose-file/

services:
  rpc:
    image: "example-rpc:local"
    build:
      context: .
      target: runtime
      args:
        SERVICE: example-rpc
    entrypoint: ["/example-rpc"]
    environment:
      APP_DATABASE_HOSTNAME: "postgres"
      APP_DATABASE_USERNAME: "postgres"
      APP_DATABASE_PASSWORD: "secret"
      APP_DATABASE_NAME: "postgres"
      APP_DATABASE_SSLMODE: "disable"
      APP_RPCSERVER_HOST: "0.0.0.0"
      APP_METERPROVIDER_ENDPOINT: "http://victoria-metrics:8428/opentelemetry/v1/metrics"
      APP_TRACERPROVIDER_ENDPOINT: "http://jaeger:4318"
      OTEL_GO_X_DEPRECATED_RUNTIME_METRICS: "false"
    ports:
      - "127.0.0.1:5000:5000"
    healthcheck:
      test: [ "CMD", "/example-health" ]
      start_period: "30s"
      start_interval: "1s"
    depends_on:
      jaeger:
        condition: service_healthy
      victoria-metrics:
        condition: service_healthy
    restart: always

  postgres:
    image: "mirror.gcr.io/postgres:17"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "secret"
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      # TODO: move to proper migration tool
      - "./internal/adapters/datastore/migrations/0001_initial.sql:/docker-entrypoint-initdb.d/0001_initial.sql:ro"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      start_period: "30s"
      start_interval: "1s"
    restart: always


  jaeger:
    image: "mirror.gcr.io/jaegertracing/jaeger:2.2.0"
    ports:
      - "127.0.0.1:16686:16686"
    healthcheck:
      test: [ "CMD", "wget", "-qO", "/dev/null", "http://localhost:16686/" ]
      start_period: "30s"
      start_interval: "1s"
    restart: always

  # TODO: use plain prometheus?
  #       avoids need for grafana plugin, but modifies meter provider to enable scraping
  victoria-metrics:
    image: "mirror.gcr.io/victoriametrics/victoria-metrics:latest" # TODO: pick tag
    ports:
      - "127.0.0.1:8428:8428"
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://127.0.0.1:8428/-/healthy" ]
      start_period: "30s"
      start_interval: "1s"
    restart: always

  grafana:
    image: "mirror.gcr.io/grafana/grafana:latest" # TODO: pick tag
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_BASIC_ENABLED: "false"
      # while victoriametrics is somewhat compatible with prometheus, it differs just enough that
      # some parts are broken, see https://github.com/grafana/grafana/issues/42615
      GF_INSTALL_PLUGINS: "victoriametrics-metrics-datasource"
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - "./config/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro"
      - "./config/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro"
      - "./config/dashboards:/etc/dashboards:rw"
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://127.0.0.1:3000/api/health" ]
      start_period: "30s"
      start_interval: "1s"
    restart: always


