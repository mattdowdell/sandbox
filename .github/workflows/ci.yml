name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions: {}

jobs:
  size:
    name: Size
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Size
        id: size
        uses: mattdowdell/pr-sizer@45266d54471a64e7698eac319d2ee8b6cb13cc3d # v0.1.0

      - name: Outputs
        run: |
          echo size=${SIZE}
          echo includes=${INCLUDES}
          echo excludes=${EXCLUDES}
        env:
          SIZE: ${{ steps.size.outputs.size }}
          INCLUDES: ${{ steps.size.outputs.includes }}
          EXCLUDES: ${{ steps.size.outputs.excludes }}

  checks:
    name: Checks
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Setup checks
        uses: ./.github/actions/setup-checks

      - name: Start database
        uses: hoverkraft-tech/compose-action@8be2d741e891ac9b8ac20825e6f3904149599925 # v2.2.0
        with:
          compose-file: compose.yaml
          up-flags: --build --wait
          down-flags: --volumes --remove-orphans
          services: postgres

      - name: Seed
        run: |
          just db-seed

      - name: Checks
        run: |
          just checks dirty

  lint:
    name: Lint
    if: |
      always() &&
      github.event_name == 'pull_request' &&
      (needs.checks.result == 'success' || needs.checks.result == 'skipped')
    needs:
      - checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'

      - name: Get version
        id: version
        run: |
          ./tools/docker-base-tag.sh Dockerfile.dev mirror.gcr.io/golangci/golangci-lint >> $GITHUB_OUTPUT

      - name: Lint Go
        uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 # v6.5.2
        with:
          version: ${{ steps.version.outputs.tag }}
          args: --timeout=10m

      - name: Lint Protobuf
        uses: bufbuild/buf-action@1b8e0a0e793562b7850d7e6ff0228b5c0b16111c # v1.1.0
        with:
          pr_comment: false
          format: false
          breaking: false

  unit:
    name: Unit test
    if: |
      always() &&
      (needs.checks.result == 'success' || needs.checks.result == 'skipped')
    needs:
      - checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'

      - name: Install Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0

      - name: Unit test
        run: just unit

      # TODO: report coverage to PR
      # maybe gwatts/go-coverage-action?

  scan:
    name: Scan
    if: |
      always() &&
      (needs.checks.result == 'success' || needs.checks.result == 'skipped')
    needs:
      - checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'

      - name: Install Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0

      # required for trivy to find licenses
      # see https://trivy.dev/latest/docs/coverage/language/golang/#license
      - name: Populate Go mod cache
        run: just tidy-go

      - name: Get trivy version
        id: trivy-version
        run: |
          ./tools/docker-base-tag.sh Dockerfile.dev ghcr.io/aquasecurity/trivy >> $GITHUB_OUTPUT

      - name: Run trivy
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
        with:
          scan-type: fs
          trivy-config: trivy.yaml
          version: v${{ steps.trivy-version.outputs.tag }}

      # TODO: publish to github for default branch builds?
      # https://github.com/actions/starter-workflows/blob/main/code-scanning/trivy.yml

      - name: Run zizmor
        uses: ./.github/actions/zizmor
        with:
          persona: pedantic

      - name: Run gitleaks
        uses: ./.github/actions/gitleaks

  functional:
    name: Functional Tests
    if: |
      always() &&
      (needs.lint.result == 'success' || needs.lint.result == 'skipped') &&
      needs.unit.result == 'success' &&
      needs.scan.result == 'success'
    needs:
      - lint
      - unit
      - scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Start
        uses: hoverkraft-tech/compose-action@8be2d741e891ac9b8ac20825e6f3904149599925 # v2.2.0
        with:
          compose-file: compose.yaml
          up-flags: --build --wait
          down-flags: --volumes --remove-orphans

      # TODO: run tests

  tag:
    name: Tag
    if: |
      always() &&
      needs.functional.result == 'success'
    needs:
      - functional
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      short: ${{ steps.tag.outputs.short }}
      long: ${{ steps.tag.outputs.long }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Tag
        id: tag
        uses: ./.github/actions/tag

  build:
    name: Build
    if: |
      always() &&
      needs.tag.result == 'success'
    needs:
      - tag
    runs-on: ubuntu-latest
    permissions:
      contents: read  # for checkout
      packages: write # for container push
      id-token: write # for keyless image signing
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: GHCR Login
        if: github.ref_name == github.event.repository.default_branch
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Setup cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Build
        uses: ./.github/actions/container-build
        with:
          service: example-rpc
          repository: ghcr.io/mattdowdell/sandbox/example-rpc
          version: ${{ needs.tag.outputs.long }}
          push: ${{ github.ref_name == github.event.repository.default_branch }}
