name: Tag
description: "TODO"

inputs:
  minimum:
    description: "The minimum version to use. This can either be an initial version, or be used to force the version to jump forward."
    required: false
    default: "0.0.1"

  rollover:
    description: "Whether to rollover the version when the limit is reached."
    required: false
    default: "false"

  limit:
    description: "The number to trigger a rollover at."
    required: false
    default: "100"

outputs:
  short:
    description: "The output of 'git describe'."
    value: ${{ steps.describe.outputs.short }}
  long:
    description: "The output of 'git describe --long'."
    value: ${{ steps.describe.outputs.long }}

runs:
  using: "composite"
  steps:
    # TODO: check we have a deep checkout
    - name: Check
      shell: bash
      run: |
        echo "Not implemented"

    - name: Next
      id: next
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
          const path = require('path');

          const script = require(path.join(process.env.GITHUB_ACTION_PATH, 'next.js'));
          await script({ core, exec });
      env:
        minimum: ${{ inputs.minimum }}
        rollover: ${{ inputs.rollover }}
        limit: ${{ inputs.limit }}

    - name: Create
      # TODO: uncomment
      # if: github.ref_name == github.event.repository.default_branch
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
          const path = require('path');

          const script = require(path.join(process.env.GITHUB_ACTION_PATH, 'create.js'));
          await script({ exec });
      env:
        version: ${{ steps.next.outputs.next }}

    - name: Describe
      id: describe
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
          const path = require('path');

          const script = require(path.join(process.env.GITHUB_ACTION_PATH, 'describe.js'));
          await script({ core, exec });

