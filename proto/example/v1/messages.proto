syntax = "proto3";

package example.v1;

import "buf/validate/validate.proto";
import "example/v1/models.proto";

option go_package = "github.com/mattdowdell/sandbox/gen/example/v1;examplev1";

// ...
message CreateResourceRequest {
  ResourceCreate resource = 1 [(buf.validate.field).required = true];
}

// ...
message CreateResourceResponse {
  Resource resource = 1 [(buf.validate.field).required = true];
}

// ...
message GetResourceRequest {
  string id = 1 [(buf.validate.field).string.uuid = true]; // TODO: check if empty is rejected
}

// ...
message GetResourceResponse {
  Resource resource = 1 [(buf.validate.field).required = true];
}

// ...
enum Direction {
  // ...
  DIRECTION_UNSPECIFIED = 0;

  // ...
  DIRECTION_ASC = 1;

  // ...
  DIRECTION_DESC = 2;
}

// ...
message Sort {
  // ...
  string field = 1; // TODO: make required

  // ...
  Direction direction = 2 [(buf.validate.field).enum = {
    defined_only: true
    not_in: [0]
  }];
}

// ...
//
// TODO: add max lengths to fields
message ListResourcesFilter {
  // ...
  repeated string id = 1 [(buf.validate.field).repeated = {
    max_items: 10
    unique: true
    items: {
      string: {uuid: true}
    }
  }];
}

// ...
message ListResourcesRequest {
  // ...
  string next = 1;

  // ...
  int32 limit = 2 [(buf.validate.field).int32 = {
    gte: 0
    lte: 100
  }];

  // ...
  repeated Sort sort = 3 [(buf.validate.field).repeated.max_items = 5];

  // ...
  ListResourcesFilter filter = 4;
}

// ...
message ListResourcesResponse {
  // ...
  string next = 1;

  // ...
  repeated Resource items = 2;
}

// ...
message UpdateResourceRequest {
  ResourceUpdate resource = 1 [(buf.validate.field).required = true];
}

// ...
message UpdateResourceResponse {
  Resource resource = 1 [(buf.validate.field).required = true];
}

// ...
message DeleteResourceRequest {
  string id = 1 [(buf.validate.field).string.uuid = true]; // TODO: check if empty is rejected
}

// ...
message DeleteResourceResponse {}

// ...
//
// TODO: add max lengths to fields
message ListAuditEventsFilter {}

// ...
message ListAuditEventsRequest {
  // ...
  string next = 1;

  // ...
  int32 limit = 2 [(buf.validate.field).int32 = {
    gt: 0
    lte: 100
  }];

  // ...
  repeated Sort sort = 3 [(buf.validate.field).repeated.max_items = 5];

  // ...
  ListAuditEventsFilter filter = 4;
}

// ...
message ListAuditEventsResponse {
  // ...
  string next = 1;

  // ...
  repeated AuditEvent items = 2;
}

// ...
message WatchAuditEventsRequest {}

// ...
message WatchAuditEventsResponse {
  AuditEvent audit_event = 1;
}
